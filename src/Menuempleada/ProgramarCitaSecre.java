/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Menuempleada;

import clinica.*;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;


/**
 *
 * @author Bruce
 */
public class ProgramarCitaSecre extends javax.swing.JFrame {

    /**
     * Creates new form NuevaCita
     */
    public ProgramarCitaSecre() {
        initComponents();
        Cerrar();
        mostrarCodigo("");
        
        Thora.setText(horar);
        comid.setVisible(false);
        tdoctor.setVisible(false);
      
        Calendar c2 = new GregorianCalendar();
        jDateChooser1.setCalendar(c2);
        Date fecha=jDateChooser1.getDate();
        SimpleDateFormat t = new SimpleDateFormat ("d/MM/YYYY");
        x=t.format(fecha);
        
    }
    
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().
                getImage(ClassLoader.getSystemResource("Imagenes/caduceo (1).png"));


        return retValue;
    }
    String x;
    
    
    
 Calendar Cal = new GregorianCalendar();
     String fe= Cal.get(Cal.DATE)+"/"+(Cal.get(Cal.MONTH)+1)+"/"+Cal.get(Cal.YEAR);
     String horar= Cal.get(Calendar.HOUR_OF_DAY)+":"+Cal.get(Cal.MINUTE); 
     
        
        
     
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        Thora = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        Tid = new javax.swing.JFormattedTextField();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTdoc = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        tdoctor = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        comid = new javax.swing.JLabel();
        Tnombre = new javax.swing.JTextField();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Programacion de Cita");
        setIconImage(getIconImage());
        setMinimumSize(new java.awt.Dimension(832, 311));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel5.setText("Doctor");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 140, -1, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel6.setText("Fecha");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 30, -1, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel7.setText("Paciente");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 90, -1, -1));

        jLabel16.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel16.setText("Hora");
        getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 60, -1, -1));

        Thora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ThoraActionPerformed(evt);
            }
        });
        getContentPane().add(Thora, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 60, 220, -1));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenessubmenucita/icons8-MÃ¡s-40.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 180, -1, -1));

        try {
            Tid.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-####-#####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        Tid.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                TidFocusLost(evt);
            }
        });
        Tid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TidActionPerformed(evt);
            }
        });
        getContentPane().add(Tid, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 90, 220, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel8.setText("Imprimir");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 230, -1, -1));

        jTdoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTdoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTdocMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTdoc);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 20, 310, 108));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/caduceo (1).png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, -1, -1));
        getContentPane().add(tdoctor, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 260, 220, -1));

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenessubmenucita/icons8-Imprimir-40.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 180, -1, -1));

        jLabel9.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel9.setText("Agregar");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 230, -1, -1));

        comid.setText("Paciente");
        getContentPane().add(comid, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 120, 380, 10));
        getContentPane().add(Tnombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 140, 220, -1));
        getContentPane().add(jDateChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 30, 260, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
public void Reporte(){
    Conection cc= new Conection();
try{
        String rutaInforme=System.getProperty("user.dir")+"/src/Reportes/CitaPersona.jasper";
        Map parametros= new HashMap();
        parametros.put("ffecha",x);
        parametros.put("hhora",Thora.getText());
        JasperPrint informe = JasperFillManager.fillReport(rutaInforme,parametros,cc.conexion());
        JasperViewer ventanavisor = new JasperViewer(informe, false);
        ventanavisor.setTitle("Cita");
        ventanavisor.setVisible(true);
                }
        catch (HeadlessException | JRException  e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(null,"Error en el Reporte","Error",JOptionPane.ERROR_MESSAGE );
        }
}
//public void Report1(){
//  Conection cc= new Conection();
//  Connection cn =  cc.conexion();
//  try{
//      
//      String rutaReporte=System.getProperty("user.dir")+"/src/Reportes/Citas2.jasper";
//      Map parametros= new HashMap();
//      
//      parametros.put("coddoc",Integer.parseInt(tdoctor.getText()));
//      JasperReport jasperReport=(JasperReport)JRLoader.loadObjectFromFile(rutaReporte);
//      JasperPrint print = JasperFillManager.fillReport(jasperReport,parametros,cn);
//      JasperViewer view = new JasperViewer(print, false);
//      view.setVisible(true);
//      
//  }catch(JRException e){
//      System.err.println("Error al generar el reporte"+ e.getMessage());
// }
//}

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
 Conection cc= new Conection();
        Connection cn =  cc.conexion();
        String fecha,hora,nom;
        String sql="";
        int cod;
        cod= Integer.parseInt(tdoctor.getText());
        nom= Tid.getText();
        fecha=x;
        hora=Thora.getText();
       
        sql= "INSERT INTO cita (fecha,hora,identidad,cod_doctor) VALUES(?,?,?,?)";

        try {
            PreparedStatement psd=  cn.prepareStatement(sql);
            psd.setString(1, fecha);
            psd.setString(2, hora);
            psd.setString(3, nom);
            psd.setInt(4, cod);
      
           
  
            int n=psd.executeUpdate();
            if (n>0){
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(ProgramarCitaSecre.class.getName()).log(Level.SEVERE, null, ex);
        }
          
    }//GEN-LAST:event_jButton1ActionPerformed

    private void ThoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ThoraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ThoraActionPerformed

    private void jTdocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTdocMouseClicked
    int fila= jTdoc.getSelectedRow();
        if(fila>=0){
            tdoctor.setText(jTdoc.getValueAt(fila, 2).toString());}
                                            
    int fila1= jTdoc.getSelectedRow();
        if(fila1>=0){
            Tnombre.setText(jTdoc.getValueAt(fila, 0).toString());}
    }//GEN-LAST:event_jTdocMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
     Reporte(); 
    }//GEN-LAST:event_jButton2ActionPerformed

    private void TidFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TidFocusLost
 comid.setVisible(true);
        ResultSet rs = null;
        Statement st = null;
       try {
             
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/medicor2","root","");
              st = conn.createStatement();
              rs = st.executeQuery("SELECT nombre,apellido,sexo,edad from persona where identidad ='"+Tid.getText()+"'");
//              SELECT `nombre`, `apellido` FROM `empleado`  WHERE `cod_tipoempleado`= 1

            while(rs.next()){
             
               
               String v = rs.getString("nombre");
               String tmpStrObtenido1 = rs.getString("apellido");
               String t = rs.getString("sexo");
               String tmpStrObtenido3 = rs.getString("edad");
               String v2= "Nombre: "+v+" "+tmpStrObtenido1+" "+"Sexo: "+t+" "+"Edad: "+tmpStrObtenido3;
              
               comid.setText(v2);
               System.out.println(v2);
               
           }
            
          conn.close();
         } catch (Exception e) {
             
             e.printStackTrace();
             return;
         }          // TODO add your handling code here:
    }//GEN-LAST:event_TidFocusLost

    private void TidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TidActionPerformed
public void mostrarCodigo(String valor1){
Conection cc= new Conection();
Connection cn =  cc.conexion();
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("Nombre");
        modelo.addColumn("Apellido");
        modelo.addColumn("Codigo Doctor");
        

        jTdoc.setModel(modelo);
        String sql = "";
        if(valor1.equals(""))
        {
            sql = "SELECT nombre,apellido,cod_empleado from empleado where cod_tipoempleado ='"+1+"'";
        }
        else
        {
            sql = "SELECT nombre,apellido,cod_empleado from empleado where cod_tipoempleado ='"+1+"'";
        }
        String []datos = new String [3];
        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()){
                datos [0] = rs.getString(1);
                datos [1] = rs.getString(2);
                datos [2] = rs.getString(3);
                modelo.addRow(datos);
            }
           // jtb_consulta_venta_auto.setModel(modelo);
        } catch (SQLException ex) {
            Logger.getLogger(BuscarEmpleado.class.getName()).log(Level.SEVERE, null, ex);
        }}
    /**
     * @param args the command line arguments
     */
public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProgramarCitaSecre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProgramarCitaSecre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProgramarCitaSecre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProgramarCitaSecre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProgramarCitaSecre().setVisible(true);
            }
        });
    }
 public void Cerrar(){
    
        try{
        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        addWindowListener(new WindowAdapter(){
            public void windowClosing(WindowEvent e){
            confirmarSalida();
            }
        });
    }catch(Exception e){
    e.printStackTrace();
    }
    }
    public void confirmarSalida(){
  int valor=JOptionPane.showConfirmDialog(this,"Â¿Esta Seguro de Cerrar?","Advertencia",JOptionPane.YES_NO_OPTION);
    if(valor==JOptionPane.YES_OPTION){
         CitaSecre mAD=new CitaSecre(); 
         mAD.setVisible(true);
         dispose();
    }
  }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Thora;
    private javax.swing.JFormattedTextField Tid;
    private javax.swing.JTextField Tnombre;
    private javax.swing.JLabel comid;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTdoc;
    private javax.swing.JTextField tdoctor;
    // End of variables declaration//GEN-END:variables
// public void tipo(){
//    cbTDoctor.removeAllItems();
//        ResultSet rs = null;
//        Statement st = null;
//       try {
//             
//            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/medicor2","root","");
//              st = conn.createStatement();
//              rs = st.executeQuery("SELECT nombre,apellido from empleado where cod_tipoempleado ='"+1+"'");
////              SELECT `nombre`, `apellido` FROM `empleado`  WHERE `cod_tipoempleado`= 1
//
//            while(rs.next()){
//               
//               String tmpStrObtenido = rs.getString("apellido");
//               
//               String tmpStrObtenido3 = rs.getString("nombre");
//               cbTDoctor.addItem(tmpStrObtenido +" "+ tmpStrObtenido3);
//               
//               
//           }
//          conn.close();
//         } catch (Exception e) {
//             
//             e.printStackTrace();
//             return;
//         }
//}
}
